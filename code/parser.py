import arrow
import pprint

class Status:
    def __init__(self, time, status):
	if status not in ['online', 'offline']:
	    print 'FAIL: Invalid status!: %s' % status
        self.isOnline = (status == 'online')

        time = time.replace('/', '-')
        try:
            self.time = arrow.get(time)
        except:
            print "FAIL: Could not parse the time: %s" % time
	if self.isOnline:
            self.time = self.time.replace(minutes=-5)

    def __repr__(self):
	status = 'online' if self.isOnline else 'offline'
        return '-->'.join([status, str(self.time)])


class DataParser:
    def __init__(self, filename):
        self.filename = filename
        self.data = self.get_data(filename)
        self.metadata = self.process_data()

    def get_data(self, filename):
        with open(filename, 'r') as f:
            data = f.readlines()
	data = [line.strip() for line in data]
	return data

    def process_data(self):
        metadata = {}
	for act in self.data:
	    tokens = act.split()
	    if len(tokens) != 8 or tokens[0] != 'User':
                continue

            name = tokens[2]
	    curr_time = ' '.join(tokens[6:])[1:-2]
            curr_status = Status(curr_time, tokens[3])

            if name in metadata:
                metadata[name].append(curr_status)
            else:
                metadata[name] = [curr_status]
        return metadata


def main():
    data = DataParser('data.txt')
    pprint.pprint(data.metadata)


if __name__ == '__main__':
    main()
